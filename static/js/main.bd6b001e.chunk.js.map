{"version":3,"sources":["Components/filter/Filter.module.css","Components/contactForm/ContactForm .js","Components/contactList/ContactList.js","Components/filter/Filter.js","Components/App/App.js","index.js","Components/contactForm/ContactForm.module.css","Components/contactList/ContactList.module.css"],"names":["module","exports","initialState","name","number","ContactForm","isThereThisContact","addContact","useState","form","setForm","onHandleChange","e","target","value","prev","reset","onSubmit","preventDefault","alert","className","styles","label","placeholder","type","pattern","title","required","onChange","contactName","ContactList","findContact","deleteContact","style","contactList","map","contact","contactItem","contactText","id","onClick","Filter","filter","addToFilterState","filterLabel","filterInput","App","JSON","parse","localStorage","getItem","setContactsList","find","setFind","useEffect","setItem","stringify","box","some","toLowerCase","uuidv4","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bd6b001e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__2B5ei\",\"filterLabel\":\"Filter_filterLabel__3JEhP\"};","import React, { useState } from \"react\";\nimport styles from \"./ContactForm.module.css\";\n\nconst initialState = {\n  name: \"\",\n  number: \"\",\n};\n\nconst ContactForm = ({ isThereThisContact, addContact }) => {\n  const [form, setForm] = useState(initialState);\n\n  const onHandleChange = (e) => {\n    const { name, value } = e.target;\n    setForm((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const onHandleSubmit = (e) => {\n    e.preventDefault();\n    if (isThereThisContact(form.name)) {\n      alert(`${form.name} is already in contacts`);\n      return;\n    }\n\n    addContact(form);\n\n    reset();\n  };\n\n  const reset = () => setForm({ name: \"\", number: \"\" });\n\n  return (\n    <form onSubmit={onHandleSubmit} className={styles.form}>\n      <label className={styles.label}>\n        Name\n        <input\n          placeholder=\"Jacob Mercer\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={form.name}\n          onChange={onHandleChange}\n          className={styles.contactName}\n        />\n      </label>\n\n      <label className={styles.label}>\n        Number\n        <input\n          placeholder=\"+38(093)223-77-88\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={form.number}\n          onChange={onHandleChange}\n          className={styles.contactName}\n        />\n      </label>\n\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './ContactList.module.css';\n\nconst ContactList = ({ findContact, deleteContact }) => {\n  return (\n    <ul className={style.contactList}>\n      {findContact().map(contact => (\n        <li key={contact.id} className={style.contactItem}>\n          <p className={style.contactText}>\n            {contact.name}: {contact.number}\n          </p>\n          <button type=\"button\" id={contact.id} onClick={deleteContact}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  findContact: PropTypes.func.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Filter.module.css';\n\nconst Filter = ({ filter, addToFilterState }) => {\n  return (\n    <label className={style.filterLabel}>\n      Find contact by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={addToFilterState}\n        className={style.filterInput}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  addToFilterState: PropTypes.func,\n};\n\nexport default Filter;\n","import React, { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactForm from \"../contactForm/ContactForm \";\nimport ContactList from \"../contactList/ContactList\";\nimport Filter from \"../filter/Filter\";\nimport styles from \"./App.module.css\";\n\nconst App = () => {\n  const [contactList, setContactsList] = useState(\n    JSON.parse(localStorage.getItem(\"contacts\")) || []\n  );\n  const [find, setFind] = useState(\"\");\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contactList));\n  }, [contactList]);\n\n  const addContact = (contact) =>\n    setContactsList((prev) => [...prev, { id: uuidv4(), ...contact }]);\n\n  const isThereThisContact = (name) =>\n    contactList.some(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n  const deleteContact = (e) => {\n    const id = e.target.id;\n    setContactsList((prev) => prev.filter((contact) => contact.id !== id));\n  };\n\n  const addToFilterState = (e) => {\n    const filter = e.target.value;\n    setFind(filter);\n  };\n\n  const findContact = () =>\n    contactList.filter((contact) =>\n      contact.name.toLowerCase().includes(find.toLowerCase())\n    );\n\n  return (\n    <>\n      <div className={styles.box}>\n        <h1>Phonebook</h1>\n        <ContactForm\n          isThereThisContact={isThereThisContact}\n          addContact={addContact}\n        />\n\n        <h2>Contacts</h2>\n        <Filter addToFilterState={addToFilterState} filter={find} />\n        <ContactList findContact={findContact} deleteContact={deleteContact} />\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3A5Ca\",\"contactName\":\"ContactForm_contactName__1n2lp\",\"label\":\"ContactForm_label__2XPJX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3UGJ5\",\"contactItem\":\"ContactList_contactItem__3cDPG\",\"contactText\":\"ContactList_contactText__JiloV\"};"],"sourceRoot":""}