{"version":3,"sources":["Components/contactList/ContactList.module.css","Components/filter/Filter.module.css","redux/contacts/contactsType.js","Components/contactForm/ContactForm .js","redux/contacts/contactsActions.js","Components/contactList/ContactList.js","Components/filter/Filter.js","Components/App/App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js","Components/contactForm/ContactForm.module.css"],"names":["module","exports","ADD","GET","DELETE","FILTER","initialState","name","number","mapDispatchToProps","addContact","contact","type","payload","id","uuidv4","connect","state","contactList","contacts","items","useState","form","setForm","onHandleChange","e","target","value","prev","reset","onSubmit","preventDefault","some","toLowerCase","alert","className","styles","label","placeholder","pattern","title","required","onChange","contactName","deleteContact","contactFilter","filter","onDeleteBtnClick","style","includes","map","contactItem","contactText","onClick","filterContact","filterLabel","filterInput","getContacts","useEffect","JSON","parse","localStorage","getItem","length","setItem","stringify","box","contactsReducer","combineReducers","rootReducer","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8d9ddd1d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3UGJ5\",\"contactItem\":\"ContactList_contactItem__3cDPG\",\"contactText\":\"ContactList_contactText__JiloV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__2B5ei\",\"filterLabel\":\"Filter_filterLabel__3JEhP\"};","const ADD = \"contactsActions/addContact\";\r\nconst GET = \"contactsActions/getContacts\";\r\nconst DELETE = \"contactsActions/deleteContact\";\r\nconst FILTER = \"contactsActions/filterContact\";\r\n\r\nexport { ADD, GET, DELETE, FILTER };\r\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addContact } from \"../../redux/contacts/contactsActions\";\nimport styles from \"./ContactForm.module.css\";\n\nconst initialState = {\n  name: \"\",\n  number: \"\",\n};\n\nconst ContactForm = ({ addContact, contactList }) => {\n  const [form, setForm] = useState(initialState);\n\n  const onHandleChange = (e) => {\n    const { name, value } = e.target;\n    setForm((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const isThereThisContact = (name) =>\n    contactList.some(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n  const onHandleSubmit = (e) => {\n    e.preventDefault();\n    if (isThereThisContact(form.name)) {\n      alert(`${form.name} is already in contacts`);\n      return;\n    }\n\n    addContact(form);\n\n    reset();\n  };\n\n  const reset = () => setForm({ name: \"\", number: \"\" });\n\n  return (\n    <form onSubmit={onHandleSubmit} className={styles.form}>\n      <label className={styles.label}>\n        Name\n        <input\n          placeholder=\"Jacob Mercer\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={form.name}\n          onChange={onHandleChange}\n          className={styles.contactName}\n        />\n      </label>\n\n      <label className={styles.label}>\n        Number\n        <input\n          placeholder=\"+38(093)223-77-88\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={form.number}\n          onChange={onHandleChange}\n          className={styles.contactName}\n        />\n      </label>\n\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n\nconst mapDispatchToProps = {\n  addContact,\n};\n\nconst mapStateToProps = (state) => ({\n  contactList: state.contacts.items,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import { v4 as uuidv4 } from \"uuid\";\r\nimport { ADD, GET, DELETE, FILTER } from \"../contacts/contactsType\";\r\n\r\nexport const addContact = (contact) => ({\r\n  type: ADD,\r\n  payload: { id: uuidv4(), ...contact },\r\n});\r\n\r\nexport const getContacts = (contacts) => ({\r\n  type: GET,\r\n  payload: contacts,\r\n});\r\n\r\nexport const deleteContact = (id) => ({\r\n  type: DELETE,\r\n  payload: id,\r\n});\r\n\r\nexport const filterContact = (value) => ({\r\n  type: FILTER,\r\n  payload: value,\r\n});\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { deleteContact } from \"../../redux/contacts/contactsActions\";\nimport PropTypes from \"prop-types\";\nimport style from \"./ContactList.module.css\";\n\nconst ContactList = ({ contactList, contactFilter, deleteContact }) => {\n  const onDeleteBtnClick = (e) => {\n    const id = e.target.id;\n    deleteContact(id);\n  };\n\n  const findContact = () =>\n    contactList.filter((contact) =>\n      contact.name.toLowerCase().includes(contactFilter.toLowerCase())\n    );\n\n  return (\n    <ul className={style.contactList}>\n      {findContact().map((contact) => (\n        <li key={contact.id} className={style.contactItem}>\n          <p className={style.contactText}>\n            {contact.name}: {contact.number}\n          </p>\n          <button type=\"button\" id={contact.id} onClick={onDeleteBtnClick}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  findContact: PropTypes.func.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  contactList: state.contacts.items,\n  contactFilter: state.contacts.filter,\n});\n\nconst mapDispatchToProps = {\n  deleteContact,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { filterContact } from \"../../redux/contacts/contactsActions\";\nimport PropTypes from \"prop-types\";\nimport style from \"./Filter.module.css\";\n\nconst Filter = ({ filterContact }) => {\n  const addToFilterState = (e) => {\n    const filter = e.target.value;\n    filterContact(filter);\n  };\n  return (\n    <label className={style.filterLabel}>\n      Find contact by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        onChange={addToFilterState}\n        className={style.filterInput}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  addToFilterState: PropTypes.func,\n};\n\nconst mapDispatchToProps = {\n  filterContact,\n};\n\nexport default connect(null, mapDispatchToProps)(Filter);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getContacts } from \"../../redux/contacts/contactsActions\";\nimport ContactForm from \"../contactForm/ContactForm \";\nimport ContactList from \"../contactList/ContactList\";\nimport Filter from \"../filter/Filter\";\nimport styles from \"./App.module.css\";\n\nconst App = ({ contactList, getContacts }) => {\n  useEffect(() => {\n    getContacts(JSON.parse(localStorage.getItem(\"contacts\")));\n  }, [getContacts]);\n\n  useEffect(() => {\n    contactList.length &&\n      localStorage.setItem(\"contacts\", JSON.stringify(contactList));\n  }, [contactList]);\n\n  return (\n    <>\n      <div className={styles.box}>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  contactList: state.contacts.items,\n});\n\nconst mapDispatchToProps = {\n  getContacts,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers } from \"redux\";\r\nimport { ADD, GET, DELETE, FILTER } from \"../contacts/contactsType\";\r\n\r\nconst itemsReducer = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case ADD:\r\n      return [...state, payload];\r\n\r\n    case GET:\r\n      return payload;\r\n\r\n    case DELETE:\r\n      return state.filter((contact) => contact.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst filterReducer = (state = \"\", { type, payload }) => {\r\n  switch (type) {\r\n    case FILTER:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const contactsReducer = combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n});\r\n","import { combineReducers, createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { contactsReducer } from \"./contacts/contactsReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n});\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools());\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App/App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3A5Ca\",\"contactName\":\"ContactForm_contactName__1n2lp\",\"label\":\"ContactForm_label__2XPJX\"};"],"sourceRoot":""}